diff -ru mutt-1.5.20/PATCHES mutt-w3mface/PATCHES
--- mutt-1.5.20/PATCHES	2010-07-11 23:06:22.398147539 -0400
+++ mutt-w3mface/PATCHES	2010-07-11 23:07:05.467966046 -0400
@@ -0,0 +1 @@
+patch-1.5.13.tamo.w3mface.2
diff -ru mutt-1.5.20/globals.h mutt-w3mface/globals.h
--- mutt-1.5.20/globals.h	2010-07-11 23:06:22.365468843 -0400
+++ mutt-w3mface/globals.h	2010-07-11 23:07:05.467966046 -0400
@@ -163,6 +163,11 @@
 WHERE HASH *Groups;
 WHERE HASH *ReverseAlias;
 
+WHERE char *UncompFace;
+WHERE char *IconToPbm;
+WHERE char *W3mImgDisplay;
+WHERE char *W3mOpt;
+
 WHERE LIST *AutoViewList INITVAL(0);
 WHERE LIST *AlternativeOrderList INITVAL(0);
 WHERE LIST *AttachAllow INITVAL(0);
diff -ru mutt-1.5.20/hcache.c mutt-w3mface/hcache.c
--- mutt-1.5.20/hcache.c	2009-06-01 12:29:32.000000000 -0400
+++ mutt-w3mface/hcache.c	2010-07-11 23:08:51.231286060 -0400
@@ -436,6 +436,7 @@
   d = dump_char(e->message_id, d, off, 0);
   d = dump_char(e->supersedes, d, off, 0);
   d = dump_char(e->date, d, off, 0);
+  d = dump_char(e->x_face, d, off, convert);
   d = dump_char(e->x_label, d, off, convert);
 
   d = dump_buffer(e->spam, d, off, convert);
@@ -473,6 +474,7 @@
   restore_char(&e->message_id, d, off, 0);
   restore_char(&e->supersedes, d, off, 0);
   restore_char(&e->date, d, off, 0);
+  restore_char(&e->x_face, d, off, convert);
   restore_char(&e->x_label, d, off, convert);
 
   restore_buffer(&e->spam, d, off, convert);
diff -ru mutt-1.5.20/init.h mutt-w3mface/init.h
--- mutt-1.5.20/init.h	2010-07-11 23:06:22.375470685 -0400
+++ mutt-w3mface/init.h	2010-07-11 23:09:37.174632691 -0400
@@ -3588,6 +3588,31 @@
   ** name of original article author) to article that followuped to newsgroup.
   */
 #endif
+  { "xface",		DT_BOOL, R_NONE, OPTXFACE, 0 },
+  /*
+  ** .pp
+  ** Controls whether mutt displays X-Faces.
+  */
+  { "xface_icontopbm",	DT_PATH, R_NONE, UL &IconToPbm, UL "icontopbm" },
+  /*
+  ** .pp
+  ** Specify the path to ``icontopbm'' program.
+  */
+  { "xface_uncompface",	DT_PATH, R_NONE, UL &UncompFace, UL "uncompface" },
+  /*
+  ** .pp
+  ** Specify the path to ``uncompface'' program.
+  */
+  { "xface_w3mimgdisplay",DT_PATH, R_NONE, UL &W3mImgDisplay, UL "/usr/lib/w3m/w3mimgdisplay" },
+  /*
+  ** .pp
+  ** Specify the path to ``w3mimgdisplay'' program.
+  */
+  { "xface_w3mimgdisplay_options",DT_STR, R_NONE, UL &W3mOpt, UL "-x 5 -y 5" },
+  /*
+  ** .pp
+  ** Specify options for ``w3mimgdisplay'' program.
+  */
   /*--*/
   { NULL, 0, 0, 0, 0 }
 };
diff -ru mutt-1.5.20/mutt.h mutt-w3mface/mutt.h
--- mutt-1.5.20/mutt.h	2010-07-11 23:06:22.388802486 -0400
+++ mutt-w3mface/mutt.h	2010-07-11 23:07:05.471298285 -0400
@@ -475,6 +475,7 @@
   OPTWRAP,
   OPTWRAPSEARCH,
   OPTWRITEBCC,		/* write out a bcc header? */
+  OPTXFACE,
   OPTXMAILER,
 
   OPTCRYPTUSEGPGME,
@@ -631,6 +632,7 @@
   char *message_id;
   char *supersedes;
   char *date;
+  char *x_face;			/* X-Face header content */
   char *x_label;
   char *organization;
 #ifdef USE_NNTP
diff -ru mutt-1.5.20/muttlib.c mutt-w3mface/muttlib.c
--- mutt-1.5.20/muttlib.c	2010-07-11 23:06:22.362136323 -0400
+++ mutt-w3mface/muttlib.c	2010-07-11 23:07:05.471298285 -0400
@@ -688,6 +688,7 @@
   FREE (&(*p)->message_id);
   FREE (&(*p)->supersedes);
   FREE (&(*p)->date);
+  FREE (&(*p)->x_face);
   FREE (&(*p)->x_label);
   FREE (&(*p)->organization);
 #ifdef USE_NNTP
diff -ru mutt-1.5.20/pager.c mutt-w3mface/pager.c
--- mutt-1.5.20/pager.c	2010-07-11 23:06:22.395469769 -0400
+++ mutt-w3mface/pager.c	2010-07-11 23:07:05.474631656 -0400
@@ -1506,6 +1506,89 @@
   return cur;
 }
 
+static int
+display_xface (HEADER *hdr)
+{
+  char facefile[_POSIX_PATH_MAX + 1];
+  char command[LONG_STRING];
+  char *facedata;
+  FILE *fpin = NULL, *fpout = NULL;
+  pid_t pid;
+
+  /* everything ready? */
+  if (!UncompFace	|| !(*UncompFace) ||
+      !IconToPbm	|| !(*IconToPbm) ||
+      !W3mImgDisplay	|| !(*W3mImgDisplay) ||
+      !hdr || !hdr->env || !hdr->env->x_face)
+    return 0;
+
+  /* test w3mimgdisplay */
+  snprintf (command, sizeof (command), "%s -test >/dev/null", W3mImgDisplay);
+  if (mutt_system (command) == -1)
+    return 0;
+
+  /* prepare facedata */
+  facedata = hdr->env->x_face;
+
+  /* convert facedata to imagedata
+   * and store imagedata in facefile
+   */
+  mutt_mktemp (facefile);
+  if ((fpout = safe_fopen (facefile, "w")) == NULL)
+  {
+    mutt_error (_("Could not create temporary file!"));
+    return 0;
+  }
+  snprintf (command, sizeof (command),
+	    "( echo '/* Width=48, Height=48 */'; %s ) | %s",
+	    UncompFace, IconToPbm);
+  pid = mutt_create_filter_fd
+	  (command, &fpin, NULL, NULL, -1, fileno (fpout), -1);
+  if (pid < 0)
+  {
+    mutt_perror (_("face filter"));
+    safe_fclose (&fpout);
+    mutt_unlink (facefile);
+    return 0;
+  }
+  /* pass facedata to converters */
+  fputs (facedata, fpin);
+  if (safe_fclose (&fpin) != 0 && errno != EPIPE)
+  {
+    if (fpout != NULL)
+    {
+      mutt_wait_filter (pid);
+      safe_fclose (&fpout);
+    }
+    mutt_unlink (facefile);
+    return 0;
+  }
+  if (fpout != NULL)
+    mutt_wait_filter (pid);
+  safe_fclose (&fpout);
+
+  /*
+   * w3mimgdisplay
+   */
+  snprintf (command, sizeof (command),
+	    "%s %s", W3mImgDisplay, NONULL (W3mOpt));
+  pid = mutt_create_filter_fd
+	  (command, &fpin, NULL, NULL, -1, -1, -1);
+  if (pid < 0)
+  {
+    mutt_perror ("w3mdisp");
+    mutt_unlink (facefile);
+    return 0;
+  }
+  /* pass facefile to w3mimgdisplay */
+  fprintf (fpin, "2;3;\n0;1;0;0;48;48;0;0;48;48;%s\n4;\n3;\n", facefile);
+  if (safe_fclose (&fpin) != 0 && errno != EPIPE)
+    mutt_perror ("w3mdisp");
+  mutt_wait_filter (pid);
+  mutt_unlink (facefile);
+  return 0;
+}
+
 static struct mapping_t PagerHelp[] = {
   { N_("Exit"),	OP_EXIT },
   { N_("PrevPg"), OP_PREV_PAGE },
@@ -1551,6 +1634,7 @@
   int lines = 0, curline = 0, topline = 0, oldtopline = 0, err, first = 1;
   int r = -1, wrapped = 0, searchctx = 0;
   int redraw = REDRAW_FULL;
+  int xface = 0;
   FILE *fp = NULL;
   LOFF_T last_pos = 0, last_offset = 0;
   int old_smart_wrap, old_markers;
@@ -1634,6 +1718,8 @@
 
     if (redraw & REDRAW_FULL)
     {
+      xface = 1; /* display xface later */
+
       SETCOLOR (MT_COLOR_NORMAL);
       /* clear() doesn't optimize screen redraws */
       move (0, 0);
@@ -1846,6 +1932,11 @@
     } else move (statusoffset, COLS-1);
     mutt_refresh ();
 
+    /* X-Face */
+    if (option (OPTXFACE) && xface && IsHeader (extra))
+      display_xface (extra->hdr);
+    xface = 0;
+
     if (IsHeader (extra) && OldHdr == extra->hdr && TopLine != topline
         && lineInfo[curline].offset < sb.st_size-1)
     {
diff -ru mutt-1.5.20/parse.c mutt-w3mface/parse.c
--- mutt-1.5.20/parse.c	2010-07-11 23:06:22.324634859 -0400
+++ mutt-w3mface/parse.c	2010-07-11 23:10:20.856204442 -0400
@@ -43,6 +43,7 @@
   char *buf = line;
   int ch;
   size_t offset = 0;
+  int xface = 0;
 
   FOREVER
   {
@@ -53,6 +54,9 @@
       return (line);
     }
 
+    if (ascii_strcasecmp (buf, "x-face:") == 0)
+      xface = 1;
+
     buf += strlen (buf) - 1;
     if (*buf == '\n')
     {
@@ -71,9 +75,12 @@
       /* eat tabs and spaces from the beginning of the continuation line */
       while ((ch = fgetc (f)) == ' ' || ch == '\t')
 	;
-      ungetc (ch, f);
-      *++buf = ' '; /* string is still terminated because we removed
-		       at least one whitespace char above */
+      if (!xface)
+      {
+	ungetc (ch, f);
+	*++buf = ' '; /* string is still terminated because we removed
+			 at least one whitespace char above */
+      }
     }
 
     buf++;
@@ -1289,6 +1296,11 @@
       e->x_label = safe_strdup(p);
       matched = 1;
     }
+    else if (ascii_strcasecmp (line+1, "-face") == 0)
+    {
+      e->x_face = safe_strdup (p);
+      matched = 1;
+    }
 #ifdef USE_NNTP
     else if (!mutt_strcasecmp (line + 1, "-comment-to"))
     {
diff -ru mutt-1.5.20/sendlib.c mutt-w3mface/sendlib.c
--- mutt-1.5.20/sendlib.c	2010-07-11 23:06:22.327974444 -0400
+++ mutt-w3mface/sendlib.c	2010-07-11 23:07:05.474631656 -0400
@@ -2008,6 +2008,9 @@
     }
   }
 
+  if (env->x_face)
+    fprintf (fp, "X-Face: %s\n", env->x_face);
+
   if (mode == 0 && !privacy && option (OPTXMAILER) && !has_agent)
   {
     /* Add a vanity header */
